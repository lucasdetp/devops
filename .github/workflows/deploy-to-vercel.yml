name: Deploy to Vercel

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        id: deploy
        run: |
          vercel link --yes --project ${{ secrets.VERCEL_PROJECT_ID }} --scope ${{ secrets.VERCEL_ORG_ID }} --token ${{ secrets.VERCEL_TOKEN }}
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            PREVIEW_URL=$(vercel --cwd ./ --token ${{ secrets.VERCEL_TOKEN }})
            echo "PREVIEW_URL=${PREVIEW_URL}" >> $GITHUB_OUTPUT
          else
            PROD_URL=$(vercel --cwd ./ --prod --token ${{ secrets.VERCEL_TOKEN }})
            echo "PROD_URL=${PROD_URL}" >> $GITHUB_OUTPUT

      - name: Add PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const previewUrl = '${{ steps.deploy.outputs.PREVIEW_URL }}';
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview build url: ${previewUrl}\nletsgo`
            })

      - name: Add commit comment
        if: github.event_name == 'push'
        uses: actions/github-script@v6
        with:
          script: |
            const prodUrl = '${{ steps.deploy.outputs.PROD_URL }}';
            const { owner, repo } = context.repo;
            const commit_sha = context.sha;
            await github.rest.repos.createCommitComment({
              owner,
              repo,
              commit_sha,
              body: `Production build url: ${prodUrl}\nletsgo`
            })
