name: Deploy and Create PR with Vercel Preview URL

on:
  push:
    branches-ignore:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Preview)
        id: vercel_deploy
        run: |
          DEPLOYMENT_URL=$(vercel --token ${{ secrets.VERCEL_TOKEN }} --confirm)
          echo "DEPLOYMENT_URL=${DEPLOYMENT_URL}" >> $GITHUB_ENV
          echo "Deployment URL: ${DEPLOYMENT_URL}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        id: cpr
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          commit-message: "Add Vercel Preview URL"
          title: "Vercel Preview URL"
          body: "This PR contains the Vercel Preview URL: ${{ env.DEPLOYMENT_URL }}"
          branch: "vercel-preview-url"
          base: "main"

      - name: Comment PR with Preview URL
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: context.repo.owner + ':vercel-preview-url'
            });
            if (pr.data.length > 0) {
              await github.rest.issues.createComment({
                issue_number: pr.data[0].number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `Preview URL: ${process.env.DEPLOYMENT_URL}`
              });
            })

  deploy-to-prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel (Production)
        run: |
          DEPLOYMENT_URL=$(vercel --token ${{ secrets.VERCEL_TOKEN }} --prod --confirm)
          echo "DEPLOYMENT_URL=${DEPLOYMENT_URL}" >> $GITHUB_ENV
          echo "Deployment URL: ${DEPLOYMENT_URL}"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
